/*the root is esentially the parent to all elements. 
here I am using it to set variables for easy color scheme experimentation and implimentatiom*/
:root {
    --bodyBackground: #111018;
    --cardBorder: rgb(96, 243, 109);
    --headerh1Text: #beff88;
    --headerContentText: #00ff40;
    ---gradientTop: #013b01;
    ---gradientBottom: rgb(126, 179, 5);
    --footerText: green;
    --cardText: rgb(241, 241, 177);
    --cardBackground: rgb(0, 0, 0);
}
/*this is setting the background's body to --bodyBackground and controlling the font family
for the whole document (excluding the code because they are in <pre> elements)*/
body {
    background-color: var(--bodyBackground); 
    font-family:'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif
}
/*aligning the header text to the center*/
header { 
    text-align: center; 
}
/*changing the main heading's color to --headerh1Text */
header h1 {
    color: var(--headerh1Text); 
}
/*padding just to add some space between the heading and text.
reverting the padding-bottom to 0 to bring the cards up a bit.
changing the color to --headerContentText*/
#headerText {
    padding: 2%; 
    padding-bottom: 0;
    color: var(--headerContentText) 
}
/*padding to keep the cards more in-center.
reverting the padding-top to keep the cards up high.
grid display for a customisable grid layout.
eaxh "1fr" will represent a column on the grid */
.cardGrid {
    padding: 10%;;
    padding-top: 20px;
    display: grid; 
    grid-template-columns: 1fr 1fr 1fr; 
}
/*the outer border of the card.
flex with flex-wrap keeps the headings and code boxes centred.
margin of 20px keeps the cards apart from eachother.
border-radius rounds the corners of the main card section.
sets the color to --cardText*/
.card {
    border: 1px solid var(--cardBorder); 
    display: flex;  
    flex-wrap: wrap; 
    margin: 20px; 
    border-radius: 8px;
    color: var(--cardText);
}
/*margin to put some distance between the code box and the edge of the card.*/
.card .cardContent{
    margin: 10px;
}
/*negative margin to bring the card together more.
centers the text*/
.cardDescription { 
    margin: -3%; 
    text-align: center;
}
/*box-shadow determines the glow
transition will have it fade in and out
transform will make the card itself bigger*/
.card:hover, .cardHeader:hover, .cardCode:hover {
    box-shadow: inset 0 0 10px var(---gradientBottom), 0 0 8px var(---gradientTop);
    transition:  all 0.5s ease-in-out; 
    transform: scale(1.03);
}
/*the border of the card header. its color is --cardBorder
margin-top negative to raise the header above the card
border-radius rounds the corners of the header
*/
.cardHeader {
    border: 1px solid var(--cardBorder); 
    margin-top: -20px; 
    border-radius: 8px; 
    text-align: center;
}
/*Locks the size of the header box*/
.card .cardHeader{
    width: 75%;
}
/*centres the description and theheader.
keeps space around the discription and header*/
.cardHeader,.cardDescription {
    margin-left: auto; 
    margin-right: auto; 
    padding: 8%; 
}

.card .cardDescription {
    width: 80%;
}
/*rounds the border of the code cards
sets the width of the element relative to the card
puts space between the edge of the code section and card
border around code --cardBorder
highlights all code text when selected*/
.cardContent{ 
    border-radius: 8px; 
    width: 100%; 
    padding: 10px; 
    border: 1px solid var(--cardBorder); 
    user-select: all; 
}
/*i'm honestly really not sure why this effects the background the way it does*/
.cardCode { 
    color: white; 
    background-color: black; 
}
/*gradient background for code sections. top color is ---gradientTop and bottom color is ---gradientBottom*/
.cardContent, .cardCode { background-image: linear-gradient(var(---gradientTop) 0%, var(---gradientBottom) 100%); 
}
/*sets the color of the cards to --cardBackground*/
.cardHeader,.cardDescription,.cardCode,.cardContent,.card { 
    background-color: var(--cardBackground); 
}
/*Centers the footer and colors it --footerText*/
    .footerText{
    text-align: center;
    color: var(--footerText); 
}

/*If the screen is less than 992px wide, it will organise into 2 columns*/
@media screen and (max-width: 992px) {
    .cardGrid { grid-template-columns: 1fr 1fr; } 
}
/*If the screen is less than 768px wide, it will organise into 1 column*/
@media screen and (max-width: 768px) {
    .cardGrid { grid-template-columns: 1fr; } 
}